# Generated by Django 4.2.5 on 2023-09-24 19:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Card",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "card_name",
                    models.CharField(
                        max_length=255, verbose_name="Card Name (for review)"
                    ),
                ),
                (
                    "card_content_system_generated",
                    models.TextField(verbose_name="System Generated Content"),
                ),
                (
                    "card_content_user_generated",
                    models.TextField(verbose_name="User Generated Content"),
                ),
                (
                    "notes",
                    models.TextField(verbose_name="User Notes (Markdown Format)"),
                ),
                (
                    "associated_resources",
                    models.TextField(verbose_name="Associated Resources"),
                ),
                (
                    "pronunciation",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="pronunciations/",
                        verbose_name="Pronunciation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Level",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Name of the Level"),
                ),
                (
                    "description",
                    models.TextField(verbose_name="Description of the Level"),
                ),
                (
                    "level_number",
                    models.IntegerField(verbose_name="Hierachial Number of the Level"),
                ),
                (
                    "total_attempts_min",
                    models.IntegerField(verbose_name="Minimum Total Attempts"),
                ),
                (
                    "total_correct_min",
                    models.IntegerField(verbose_name="Minimum Total Correct"),
                ),
                (
                    "interval_time",
                    models.IntegerField(verbose_name="Interval Time (in days)"),
                ),
                (
                    "card_background",
                    models.CharField(max_length=255, verbose_name="Card Background"),
                ),
                (
                    "card_glow",
                    models.CharField(max_length=255, verbose_name="Card Glow"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tag_name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Tag Name"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ease_of_recall",
                    models.CharField(
                        default="not easy", max_length=10, verbose_name="Ease of Recall"
                    ),
                ),
                (
                    "outcome",
                    models.BooleanField(verbose_name="Outcome (Correct or Wrong)"),
                ),
                ("total_attempts", models.IntegerField(verbose_name="Total Attempts")),
                ("total_correct", models.IntegerField(verbose_name="Total Correct")),
                ("accuracy", models.FloatField(verbose_name="Accuracy (Percentage)")),
                (
                    "completion_time",
                    models.IntegerField(verbose_name="Completion Time (minutes)"),
                ),
                ("last_review", models.DateField(verbose_name="Last Review")),
                ("next_review", models.DateField(verbose_name="Next Review")),
                (
                    "priority_level",
                    models.IntegerField(default=0, verbose_name="Priority Level"),
                ),
                (
                    "card",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cards.card",
                        verbose_name="Card",
                    ),
                ),
                (
                    "level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cards.level",
                        verbose_name="Level ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CardTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "card",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cards.card",
                        verbose_name="Card",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cards.tag",
                        verbose_name="Tag",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="card",
            name="level",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="cards.level",
                verbose_name="Level ID",
            ),
        ),
        migrations.AddField(
            model_name="card",
            name="system_defined_tags",
            field=models.ManyToManyField(
                related_name="system_defined_cards",
                to="cards.tag",
                verbose_name="System Defined Tags",
            ),
        ),
        migrations.AddField(
            model_name="card",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Owner of the Card",
            ),
        ),
        migrations.AddField(
            model_name="card",
            name="user_defined_tags",
            field=models.ManyToManyField(
                related_name="user_defined_cards",
                to="cards.tag",
                verbose_name="User Defined Tags",
            ),
        ),
    ]
